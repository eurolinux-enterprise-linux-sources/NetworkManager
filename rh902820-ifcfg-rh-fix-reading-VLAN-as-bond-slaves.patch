From 90867c0090f77923b4619fccc31f9b3f61ffc053 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ji=C5=99=C3=AD=20Klime=C5=A1?= <jklimes@redhat.com>
Date: Fri, 26 Sep 2014 10:27:23 +0200
Subject: [PATCH] ifcfg-rh: fix handling VLAN connections as bond/bridge
 slaves (bgo #737377)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

MASTER=something denotes a bond slave. Thus we cannot write it for VLAN
setting. When reading, set the correct 'bond' slave type, not 'vlan'.

https://bugzilla.gnome.org/show_bug.cgi?id=737377

Signed-off-by: Jiří Klimeš <jklimes@redhat.com>

(based on commit accaedbc37acaefa18b75140a4a0250b80920b9f)
---
 system-settings/plugins/ifcfg-rh/reader.c | 15 ++++++---------
 system-settings/plugins/ifcfg-rh/writer.c |  1 -
 2 files changed, 6 insertions(+), 10 deletions(-)

diff --git a/system-settings/plugins/ifcfg-rh/reader.c b/system-settings/plugins/ifcfg-rh/reader.c
index 333f162..a386db2 100644
--- a/system-settings/plugins/ifcfg-rh/reader.c
+++ b/system-settings/plugins/ifcfg-rh/reader.c
@@ -4051,7 +4051,6 @@ static NMSetting *
 make_vlan_setting (shvarFile *ifcfg,
                    const char *file,
                    gboolean nm_controlled,
-                   char **out_master,
                    char **unmanaged,
                    NMSetting8021x **s_8021x,
                    GError **error)
@@ -4096,7 +4095,7 @@ make_vlan_setting (shvarFile *ifcfg,
 			parent = g_strndup (iface_name, p - iface_name);
 			p++;
 		} else {
-			/* format like vlan43; PHYSDEV or MASTER must be set */
+			/* format like vlan43; PHYSDEV must be set */
 			if (g_str_has_prefix (iface_name, "vlan"))
 				p = iface_name + 4;
 		}
@@ -4148,8 +4147,6 @@ make_vlan_setting (shvarFile *ifcfg,
 	parse_prio_map_list (s_vlan, ifcfg, "VLAN_INGRESS_PRIORITY_MAP", NM_VLAN_INGRESS_MAP);
 	parse_prio_map_list (s_vlan, ifcfg, "VLAN_EGRESS_PRIORITY_MAP", NM_VLAN_EGRESS_MAP);
 
-	if (out_master)
-		*out_master = svGetValue (ifcfg, "MASTER", FALSE);
 	return (NMSetting *) s_vlan;
 
 error:
@@ -4192,19 +4189,19 @@ vlan_connection_from_ifcfg (const char *file,
 	}
 	nm_connection_add_setting (connection, con_setting);
 
-	vlan_setting = make_vlan_setting (ifcfg, file, nm_controlled, &master, unmanaged, &s_8021x, error);
+	vlan_setting = make_vlan_setting (ifcfg, file, nm_controlled, unmanaged, &s_8021x, error);
 	if (!vlan_setting) {
 		g_object_unref (connection);
 		return NULL;
 	}
 	nm_connection_add_setting (connection, vlan_setting);
 
-	/* Handle master interface or connection */
+	/* Might be a bond slave; handle master device or connection */
+	master = svGetValue (ifcfg, "MASTER", FALSE);
 	if (master) {
 		g_object_set (con_setting, NM_SETTING_CONNECTION_MASTER, master, NULL);
-		g_object_set (con_setting,
-		              NM_SETTING_CONNECTION_SLAVE_TYPE, NM_SETTING_VLAN_SETTING_NAME,
-		              NULL);
+		g_object_set (con_setting, NM_SETTING_CONNECTION_SLAVE_TYPE,
+		              NM_SETTING_BOND_SETTING_NAME, NULL);
 		g_free (master);
 	}
 
diff --git a/system-settings/plugins/ifcfg-rh/writer.c b/system-settings/plugins/ifcfg-rh/writer.c
index c037250..2d5adaf 100644
--- a/system-settings/plugins/ifcfg-rh/writer.c
+++ b/system-settings/plugins/ifcfg-rh/writer.c
@@ -1057,7 +1057,6 @@ write_vlan_setting (NMConnection *connection, shvarFile *ifcfg, gboolean *wired,
 	svSetValue (ifcfg, "TYPE", TYPE_VLAN, FALSE);
 	svSetValue (ifcfg, "DEVICE", nm_setting_vlan_get_interface_name (s_vlan), FALSE);
 	svSetValue (ifcfg, "PHYSDEV", nm_setting_vlan_get_parent (s_vlan), FALSE);
-	svSetValue (ifcfg, "MASTER", nm_setting_connection_get_master (s_con), FALSE);
 
 	tmp = g_strdup_printf ("%d", nm_setting_vlan_get_id (s_vlan));
 	svSetValue (ifcfg, "VLAN_ID", tmp, FALSE);
-- 
1.7.11.7


Squashed and adjusted NM_0_8 commits:

e476360cacff60aab13f79c262d13e4ee8d6f146: core: handle s390 CTC-type devices too
   (bgo #647578) (rh #641986)
8e707900c8d6bb72ca247c988159323b2e369f15: core: fix up checks for s390 CTC 
   device type (bgo #649025)

diff -up a/src/nm-udev-manager.c b/src/nm-udev-manager.c
--- a/src/nm-udev-manager.c	2010-08-06 20:59:05.000000000 +0200
+++ b/src/nm-udev-manager.c	2011-07-26 17:38:44.306483384 +0200
@@ -404,13 +404,26 @@ net_add (NMUdevManager *self, GUdevDevic
 	gint etype;
 	const char *iface;
 	const char *devtype;
+	gboolean is_ctc;
 
 	g_return_if_fail (device != NULL);
 
+	iface = g_udev_device_get_name (device);
+	if (!iface) {
+		nm_log_dbg (LOGD_HW, "failed to get device's interface");
+		return;
+	}
+
 	etype = g_udev_device_get_sysfs_attr_as_int (device, "type");
-	if (etype != 1) {
+	is_ctc = (strncmp (iface, "ctc", 3) == 0) && (etype == 256);
+
+	/* Ignore devices that don't report Ethernet encapsulation, except for
+	 * s390 CTC-type devices that report 256 for some reason.
+	 * FIXME: use something other than interface name to detect CTC here.
+	 */
+	if ((etype != 1) && (is_ctc == FALSE)) {
 		nm_log_dbg (LOGD_HW, "ignoring interface with type %d", etype);
-		return; /* Not using ethernet encapsulation, don't care */
+		return;
 	}
 
 	/* Not all ethernet devices are immediately usable; newer mobile broadband
@@ -426,12 +439,6 @@ net_add (NMUdevManager *self, GUdevDevic
 		return;
 	}
 
-	iface = g_udev_device_get_name (device);
-	if (!iface) {
-		nm_log_dbg (LOGD_HW, "failed to get device's interface");
-		return;
-	}
-
 	g_signal_emit (self, signals[DEVICE_ADDED], 0, device, device_creator);
 }
 

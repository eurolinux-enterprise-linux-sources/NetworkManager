From 1b483c1bf643bdfe70a432a69ee2a49e4f918026 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Ji=C5=99=C3=AD=20Klime=C5=A1?= <jklimes@redhat.com>
Date: Tue, 21 Apr 2015 09:45:07 +0200
Subject: [PATCH] cli: fix 'nmcli con' hang if NetworkManager&nm-applet are
 stopped (rh #1213327)
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

'nmcli con' command was stuck in the main loop when neither NetworkManager nor
nm-applet was running.

https://bugzilla.redhat.com/show_bug.cgi?id=1213327
Signed-off-by: Jiří Klimeš <jklimes@redhat.com>
---
 cli/src/connections.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/cli/src/connections.c b/cli/src/connections.c
index 3db7bf6..c9fc9ec 100644
--- a/cli/src/connections.c
+++ b/cli/src/connections.c
@@ -1804,6 +1804,7 @@ do_connections (NmCli *nmc, int argc, char **argv)
 	if (error || !bus) {
 		g_string_printf (nmc->return_text, _("Error: could not connect to D-Bus."));
 		nmc->return_value = NMC_RESULT_ERROR_UNKNOWN;
+		nmc->should_wait = FALSE;
 		return nmc->return_value;
 	}
 
@@ -1811,6 +1812,7 @@ do_connections (NmCli *nmc, int argc, char **argv)
 	if (!(nmc->system_settings = nm_remote_settings_system_new (bus))) {
 		g_string_printf (nmc->return_text, _("Error: Could not get system settings."));
 		nmc->return_value = NMC_RESULT_ERROR_UNKNOWN;
+		nmc->should_wait = FALSE;
 		return nmc->return_value;
 
 	}
@@ -1819,6 +1821,7 @@ do_connections (NmCli *nmc, int argc, char **argv)
 	if (!(nmc->user_settings = nm_remote_settings_new (bus, NM_CONNECTION_SCOPE_USER))) {
 		g_string_printf (nmc->return_text, _("Error: Could not get user settings."));
 		nmc->return_value = NMC_RESULT_ERROR_UNKNOWN;
+		nmc->should_wait = FALSE;
 		return nmc->return_value;
 	}
 
@@ -1829,6 +1832,7 @@ do_connections (NmCli *nmc, int argc, char **argv)
 	if (!nmc->system_settings_running && !nmc->user_settings_running) {
 		g_string_printf (nmc->return_text, _("Error: Can't obtain connections: settings services are not running."));
 		nmc->return_value = NMC_RESULT_ERROR_UNKNOWN;
+		nmc->should_wait = FALSE;
 		return nmc->return_value;
 	}
 
-- 
2.1.0


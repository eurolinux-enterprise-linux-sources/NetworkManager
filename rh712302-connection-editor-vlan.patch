diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/po/POTFILES.in.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/po/POTFILES.in
index 886a980..111d175 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/po/POTFILES.in.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/po/POTFILES.in
@@ -22,6 +22,7 @@ src/connection-editor/ce-page.c
 [type: gettext/glade]src/connection-editor/ce-page-ip6.ui
 [type: gettext/glade]src/connection-editor/ce-page-mobile.ui
 [type: gettext/glade]src/connection-editor/ce-page-ppp.ui
+[type: gettext/glade]src/connection-editor/ce-page-vlan.ui
 [type: gettext/glade]src/connection-editor/ce-page-wired.ui
 [type: gettext/glade]src/connection-editor/ce-page-wireless.ui
 [type: gettext/glade]src/connection-editor/ce-page-wireless-security.ui
@@ -36,6 +37,7 @@ src/connection-editor/page-ip4.c
 src/connection-editor/page-ip6.c
 src/connection-editor/page-mobile.c
 src/connection-editor/page-ppp.c
+src/connection-editor/page-vlan.c
 src/connection-editor/page-vpn.c
 src/connection-editor/page-wired.c
 src/connection-editor/page-wired-security.c
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/Makefile.am.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/Makefile.am
index 2f3011e..b86afc6 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/Makefile.am.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/Makefile.am
@@ -49,6 +49,8 @@ nm_connection_editor_SOURCES = \
 	page-vpn.c \
 	page-bond.h \
 	page-bond.c \
+	page-vlan.h \
+	page-vlan.c \
 	vpn-helpers.h \
 	vpn-helpers.c \
 	ip4-routes-dialog.h \
@@ -88,7 +90,8 @@ ui_DATA = \
 	ce-page-ip6.ui \
 	ce-page-dsl.ui \
 	ce-page-mobile.ui \
-	ce-page-ppp.ui
+	ce-page-ppp.ui \
+	ce-page-vlan.ui
 
 BUILT_SOURCES = nm-connection-editor-service-glue.h
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page-vlan.ui.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page-vlan.ui
new file mode 100644
index 0000000..081c8de
--- /dev/null
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page-vlan.ui
@@ -0,0 +1,223 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<interface>
+  <!-- interface-requires gtk+ 3.0 -->
+  <object class="GtkAdjustment" id="adjustment2">
+    <property name="upper">100</property>
+    <property name="step_increment">1</property>
+    <property name="page_increment">10</property>
+  </object>
+  <object class="GtkAdjustment" id="vlan_id_adjustment">
+    <property name="upper">4095</property>
+    <property name="step_increment">1</property>
+    <property name="page_increment">10</property>
+  </object>
+  <object class="GtkTable" id="VlanPage">
+    <property name="visible">True</property>
+    <property name="can_focus">False</property>
+    <property name="border_width">12</property>
+    <property name="n_rows">5</property>
+    <property name="n_columns">2</property>
+    <property name="column_spacing">12</property>
+    <property name="row_spacing">6</property>
+    <child>
+      <object class="GtkLabel" id="vlan_parent_label">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">0</property>
+        <property name="label" translatable="yes">_Parent interface:</property>
+        <property name="use_underline">True</property>
+      </object>
+      <packing>
+        <property name="x_options">GTK_FILL</property>
+        <property name="y_options"></property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkLabel" id="vlan_name_label">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">0</property>
+        <property name="label" translatable="yes">VLAN interface _name:</property>
+        <property name="use_underline">True</property>
+        <property name="mnemonic_widget">vlan_name_entry</property>
+      </object>
+      <packing>
+        <property name="top_attach">2</property>
+        <property name="bottom_attach">3</property>
+        <property name="x_options">GTK_FILL</property>
+        <property name="y_options"></property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkLabel" id="vlan_cloned_mac_label">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">0</property>
+        <property name="label" translatable="yes">_Cloned MAC address:</property>
+        <property name="use_underline">True</property>
+        <property name="mnemonic_widget">vlan_cloned_mac_entry</property>
+      </object>
+      <packing>
+        <property name="top_attach">3</property>
+        <property name="bottom_attach">4</property>
+        <property name="x_options">GTK_FILL</property>
+        <property name="y_options"></property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkEntry" id="vlan_cloned_mac_entry">
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="invisible_char">●</property>
+        <property name="invisible_char_set">True</property>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="right_attach">2</property>
+        <property name="top_attach">3</property>
+        <property name="bottom_attach">4</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkLabel" id="vlan_mtu_label">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">0</property>
+        <property name="label" translatable="yes">_MTU:</property>
+        <property name="use_underline">True</property>
+        <property name="mnemonic_widget">vlan_mtu</property>
+      </object>
+      <packing>
+        <property name="top_attach">4</property>
+        <property name="bottom_attach">5</property>
+        <property name="x_options">GTK_FILL</property>
+        <property name="y_options"></property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkHBox" id="hbox1">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="spacing">6</property>
+        <child>
+          <object class="GtkSpinButton" id="vlan_mtu">
+            <property name="visible">True</property>
+            <property name="can_focus">True</property>
+            <property name="invisible_char">●</property>
+            <property name="invisible_char_set">True</property>
+            <property name="adjustment">vlan_id_adjustment</property>
+            <property name="climb_rate">1</property>
+          </object>
+          <packing>
+            <property name="expand">True</property>
+            <property name="fill">True</property>
+            <property name="position">0</property>
+          </packing>
+        </child>
+        <child>
+          <object class="GtkLabel" id="label29">
+            <property name="visible">True</property>
+            <property name="can_focus">False</property>
+            <property name="label" translatable="yes">bytes</property>
+          </object>
+          <packing>
+            <property name="expand">False</property>
+            <property name="fill">False</property>
+            <property name="position">1</property>
+          </packing>
+        </child>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="right_attach">2</property>
+        <property name="top_attach">4</property>
+        <property name="bottom_attach">5</property>
+        <property name="x_options">GTK_FILL</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkLabel" id="vlan_id_label">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <property name="xalign">0</property>
+        <property name="label" translatable="yes">VLAN _id:</property>
+        <property name="use_underline">True</property>
+        <property name="mnemonic_widget">vlan_id_entry</property>
+      </object>
+      <packing>
+        <property name="top_attach">1</property>
+        <property name="bottom_attach">2</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkAlignment" id="vlan_parent_alignment">
+        <property name="visible">True</property>
+        <property name="can_focus">False</property>
+        <child>
+          <placeholder/>
+        </child>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="right_attach">2</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkSpinButton" id="vlan_id_entry">
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="max_length">4</property>
+        <property name="invisible_char">●</property>
+        <property name="width_chars">4</property>
+        <property name="invisible_char_set">True</property>
+        <property name="adjustment">adjustment2</property>
+        <property name="numeric">True</property>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="right_attach">2</property>
+        <property name="top_attach">1</property>
+        <property name="bottom_attach">2</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+    <child>
+      <object class="GtkEntry" id="vlan_name_entry">
+        <property name="visible">True</property>
+        <property name="can_focus">True</property>
+        <property name="invisible_char">●</property>
+      </object>
+      <packing>
+        <property name="left_attach">1</property>
+        <property name="right_attach">2</property>
+        <property name="top_attach">2</property>
+        <property name="bottom_attach">3</property>
+        <property name="y_options">GTK_FILL</property>
+      </packing>
+    </child>
+  </object>
+  <object class="GtkListStore" id="vlan_name_type_model">
+    <columns>
+      <!-- column-name name -->
+      <column type="gchararray"/>
+    </columns>
+    <data>
+      <row>
+        <col id="0" translatable="yes" comments="In context, this means &quot;concatenate the device name and the VLAN ID number together&quot;">Device name + number</col>
+      </row>
+      <row>
+        <col id="0" translatable="yes" comments="LEAVE &quot;vlan&quot; UNTRANSLATED. In context, this means &quot;concatenate the string 'vlan' and the VLAN ID number together&quot;.">"vlan" + number</col>
+      </row>
+    </data>
+  </object>
+  <object class="GtkListStore" id="vlan_parent_model">
+    <columns>
+      <!-- column-name name -->
+      <column type="gchararray"/>
+    </columns>
+  </object>
+</interface>
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.c
index b5a350d..9fa2446 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.c
@@ -44,6 +44,9 @@ enum {
 	PROP_CONNECTION,
 	PROP_INITIALIZED,
 	PROP_PARENT_WINDOW,
+	PROP_CLIENT,
+	PROP_SYSTEM_SETTINGS,
+	PROP_GCONF_SETTINGS,
 
 	LAST_PROP
 };
@@ -264,6 +267,15 @@ dispose (GObject *object)
 	if (self->connection)
 		g_object_unref (self->connection);
 
+	if (self->client)
+		g_object_unref (self->client);
+
+	if (self->system_settings)
+		g_object_unref (self->system_settings);
+
+	if (self->gconf_settings)
+		g_object_unref (self->gconf_settings);
+
 	G_OBJECT_CLASS (ce_page_parent_class)->dispose (object);
 }
 
@@ -343,6 +355,21 @@ set_property (GObject *object, guint prop_id,
 	case PROP_PARENT_WINDOW:
 		self->parent_window = g_value_get_pointer (value);
 		break;
+	case PROP_CLIENT:
+		if (self->client)
+			g_object_unref (self->client);
+		self->client = g_value_dup_object (value);
+		break;
+	case PROP_SYSTEM_SETTINGS:
+		if (self->system_settings)
+			g_object_unref (self->system_settings);
+		self->system_settings = g_value_dup_object (value);
+		break;
+	case PROP_GCONF_SETTINGS:
+		if (self->gconf_settings)
+			g_object_unref (self->gconf_settings);
+		self->gconf_settings = g_value_dup_object (value);
+		break;
 	default:
 		G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
 		break;
@@ -384,6 +411,30 @@ ce_page_class_init (CEPageClass *page_class)
 		                       "Parent window",
 		                       G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
 
+	g_object_class_install_property
+		(object_class, PROP_CLIENT,
+		 g_param_spec_object (CE_PAGE_CLIENT,
+		                      "Client",
+		                      "Client",
+		                      NM_TYPE_CLIENT,
+		                      G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
+
+	g_object_class_install_property
+		(object_class, PROP_SYSTEM_SETTINGS,
+		 g_param_spec_object (CE_PAGE_SYSTEM_SETTINGS,
+		                      "System settings",
+		                      "System settings",
+		                      NM_TYPE_REMOTE_SETTINGS_SYSTEM,
+		                      G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
+
+	g_object_class_install_property
+		(object_class, PROP_GCONF_SETTINGS,
+		 g_param_spec_object (CE_PAGE_GCONF_SETTINGS,
+		                      "GConf settings",
+		                      "GConf settings",
+		                      NMA_TYPE_GCONF_SETTINGS,
+		                      G_PARAM_READABLE | G_PARAM_WRITABLE | G_PARAM_CONSTRUCT_ONLY));
+
 	/* Signals */
 	signals[CHANGED] = 
 		g_signal_new ("changed",
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.h
index f6930f1..35e4785 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/ce-page.h
@@ -29,6 +29,7 @@
 #include <gtk/gtk.h>
 
 #include <dbus/dbus-glib.h>
+#include <nm-client.h>
 #include <nm-connection.h>
 #include <nm-remote-settings-system.h>
 #include "nma-gconf-settings.h"
@@ -65,6 +66,9 @@ typedef void (*PageNewConnectionFunc) (GtkWindow *parent,
 #define CE_PAGE_CONNECTION "connection"
 #define CE_PAGE_INITIALIZED "initialized"
 #define CE_PAGE_PARENT_WINDOW "parent-window"
+#define CE_PAGE_CLIENT "client"
+#define CE_PAGE_SYSTEM_SETTINGS "system-settings"
+#define CE_PAGE_GCONF_SETTINGS "gconf-settings"
 
 typedef struct {
 	GObject parent;
@@ -80,6 +84,10 @@ typedef struct {
 	NMConnection *connection;
 	GtkWindow *parent_window;
 
+	NMClient *client;
+	NMRemoteSettingsSystem *system_settings;
+	NMAGConfSettings *gconf_settings;
+
 	gboolean disposed;
 } CEPage;
 
@@ -97,6 +105,7 @@ typedef struct {
 
 typedef CEPage* (*CEPageNewFunc)(NMConnection *connection,
                                  GtkWindow *parent,
+                                 NMClient *client,
                                  NMRemoteSettingsSystem *system_settings,
                                  NMAGConfSettings *gconf_settings,
                                  const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/new-connection.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/new-connection.c
index 2bdc0bf..5cb84ec 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/new-connection.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/new-connection.c
@@ -31,6 +31,7 @@
 #include "page-dsl.h"
 #include "page-infiniband.h"
 #include "page-bond.h"
+#include "page-vlan.h"
 #include "page-vpn.h"
 #include "vpn-helpers.h"
 
@@ -138,6 +139,12 @@ get_connection_type_list (void)
 	data.virtual = TRUE;
 	g_array_append_val (array, data);
 
+	data.name = _("VLAN");
+	data.new_connection_func = vlan_connection_new;
+	data.setting_type = NM_TYPE_SETTING_VLAN;
+	data.virtual = TRUE;
+	g_array_append_val (array, data);
+
 	/* Add "VPN" only if there are plugins */
 	vpn_plugins_hash = vpn_get_plugins (NULL);
 	have_vpn_plugins  = vpn_plugins_hash && g_hash_table_size (vpn_plugins_hash);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.c
index 967b85b..028272d 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.c
@@ -66,6 +66,7 @@
 #include "page-vpn.h"
 #include "page-infiniband.h"
 #include "page-bond.h"
+#include "page-vlan.h"
 #include "ce-polkit-button.h"
 #include "vpn-helpers.h"
 #include "new-connection.h"
@@ -390,6 +391,10 @@ dispose (GObject *object)
 		g_object_unref (editor->builder);
 		editor->builder = NULL;
 	}
+	if (editor->client) {
+		g_object_unref (editor->client);
+		editor->client = NULL;
+	}
 	if (editor->system_settings) {
 		g_object_unref (editor->system_settings);
 		editor->system_settings = NULL;
@@ -424,6 +429,7 @@ nm_connection_editor_class_init (NMConnectionEditorClass *klass)
 NMConnectionEditor *
 nm_connection_editor_new (GtkWindow *parent_window,
                           NMConnection *connection,
+                          NMClient *client,
                           NMRemoteSettingsSystem *system_settings,
                           NMAGConfSettings *gconf_settings)
 {
@@ -439,6 +445,7 @@ nm_connection_editor_new (GtkWindow *parent_window,
 
 	editor = g_object_new (NM_TYPE_CONNECTION_EDITOR, NULL);
 	editor->parent_window = parent_window ? g_object_ref (parent_window) : NULL;
+	editor->client = g_object_ref (client);
 	editor->system_settings = g_object_ref (system_settings);
 	editor->gconf_settings = g_object_ref (gconf_settings);
 	editor->is_new_connection = is_new;
@@ -796,7 +803,8 @@ add_page (NMConnectionEditor *editor,
 	g_return_val_if_fail (func != NULL, FALSE);
 	g_return_val_if_fail (connection != NULL, FALSE);
 
-	page = (*func) (connection, GTK_WINDOW (editor->window),
+	page = (*func) (connection,
+	                GTK_WINDOW (editor->window), editor->client,
 	                editor->system_settings, editor->gconf_settings,
 	                &secrets_setting_name, error);
 	if (!page)
@@ -877,6 +885,9 @@ nm_connection_editor_set_connection (NMConnectionEditor *editor,
 	} else if (!strcmp (connection_type, NM_SETTING_BOND_SETTING_NAME)) {
 		if (!add_page (editor, ce_page_bond_new, editor->connection, error))
 			goto out;
+	} else if (!strcmp (connection_type, NM_SETTING_VLAN_SETTING_NAME)) {
+		if (!add_page (editor, ce_page_vlan_new, editor->connection, error))
+			goto out;
 	} else {
 		g_warning ("Unhandled setting type '%s'", connection_type);
 	}
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.h
index 7964dad..ec02b03 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-editor.h
@@ -26,6 +26,7 @@
 
 #include <glib-object.h>
 
+#include "nm-client.h"
 #include "nm-remote-settings-system.h"
 #include "nma-gconf-settings.h"
 #include "utils.h"
@@ -41,6 +42,7 @@ typedef struct {
 	gboolean disposed;
 
 	GtkWindow *parent_window;
+	NMClient *client;
 	NMRemoteSettingsSystem *system_settings;
 	NMAGConfSettings *gconf_settings;
 
@@ -78,6 +80,7 @@ typedef struct {
 GType               nm_connection_editor_get_type (void);
 NMConnectionEditor *nm_connection_editor_new (GtkWindow *parent_window,
                                               NMConnection *connection,
+                                              NMClient *client,
                                               NMRemoteSettingsSystem *system_settings,
                                               NMAGConfSettings *gconf_settings);
 NMConnectionEditor *nm_connection_editor_get (NMConnection *connection);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.c
index 027ae4d..8a5d8d7 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.c
@@ -291,7 +291,9 @@ really_add_connection (NMConnection *connection,
 		return;
 
 	editor = nm_connection_editor_new (GTK_WINDOW (list->dialog), connection,
-	                                   list->system_settings, list->gconf_settings);
+	                                   list->nm_client,
+	                                   list->system_settings,
+	                                   list->gconf_settings);
 	if (!editor) {
 		g_object_unref (connection);
 		return;
@@ -345,6 +347,7 @@ edit_connection (NMConnectionList *list, NMSettingsConnectionInterface *connecti
 
 	editor = nm_connection_editor_new (GTK_WINDOW (list->dialog),
 	                                   NM_CONNECTION (connection),
+	                                   list->nm_client,
 	                                   list->system_settings,
 	                                   list->gconf_settings);
 	g_signal_connect (editor, "done", G_CALLBACK (edit_done_cb), list);
@@ -448,6 +451,8 @@ dispose (GObject *object)
 		g_object_unref (list->gui);
 	if (list->client)
 		g_object_unref (list->client);
+	if (list->nm_client)
+		g_object_unref (list->nm_client);
 
 	if (list->gconf_settings)
 		g_object_unref (list->gconf_settings);
@@ -843,6 +848,10 @@ nm_connection_list_new (GType def_type)
 	if (!list->client)
 		goto error;
 
+	list->nm_client = nm_client_new ();
+	if (!list->nm_client)
+		goto error;
+
 	bus = dbus_g_bus_get (DBUS_BUS_SYSTEM, &error);
 	if (error) {
 		g_warning ("Could not connect to the system bus: %s", error->message);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.h
index c341e7f..ec71958 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/nm-connection-list.h
@@ -27,6 +27,7 @@
 #include <gconf/gconf-client.h>
 #include <gdk/gdk.h>
 #include <gtk/gtk.h>
+#include <nm-client.h>
 #include <nm-remote-settings-system.h>
 #include "nma-gconf-settings.h"
 
@@ -44,6 +45,7 @@ typedef struct {
 	GtkTreeSortable *sortable;
 	GType displayed_type;
 
+	NMClient *nm_client;
 	GConfClient *client;
 	NMAGConfSettings *gconf_settings;
 	NMRemoteSettingsSystem *system_settings;
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.c
index 56ca366..57d864d 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.c
@@ -571,6 +571,7 @@ add_bond_connection (NMConnection *connection,
 
 	editor = nm_connection_editor_new (priv->toplevel,
 	                                   connection,
+	                                   CE_PAGE (self)->client,
 	                                   priv->system_settings,
 	                                   priv->gconf_settings);
 	if (!editor) {
@@ -671,6 +672,7 @@ edit_clicked (GtkButton *button, gpointer user_data)
 
 	editor = nm_connection_editor_new (priv->toplevel,
 	                                   NM_CONNECTION (connection),
+	                                   CE_PAGE (self)->client,
 	                                   priv->system_settings,
 	                                   priv->gconf_settings);
 	if (!editor)
@@ -736,6 +738,7 @@ finish_setup (CEPageBond *self, gpointer unused, GError *error, gpointer user_da
 CEPage *
 ce_page_bond_new (NMConnection *connection,
                   GtkWindow *parent_window,
+                  NMClient *client,
                   NMRemoteSettingsSystem *system_settings,
                   NMAGConfSettings *gconf_settings,
                   const char **out_secrets_setting_name,
@@ -749,6 +752,9 @@ ce_page_bond_new (NMConnection *connection,
 	self = CE_PAGE_BOND (g_object_new (CE_TYPE_PAGE_BOND,
 	                                   CE_PAGE_CONNECTION, connection,
 	                                   CE_PAGE_PARENT_WINDOW, parent_window,
+	                                   CE_PAGE_CLIENT, client,
+	                                   CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                   CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                   NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.h
index b8235c4..7c973cc 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-bond.h
@@ -47,6 +47,7 @@ GType ce_page_bond_get_type (void);
 
 CEPage *ce_page_bond_new (NMConnection *connection,
                           GtkWindow *parent,
+                          NMClient *client,
                           NMRemoteSettingsSystem *system_settings,
                           NMAGConfSettings *gconf_settings,
                           const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.c
index 74047eb..6360612 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.c
@@ -122,6 +122,7 @@ finish_setup (CEPageDsl *self, gpointer unused, GError *error, gpointer user_dat
 CEPage *
 ce_page_dsl_new (NMConnection *connection,
                  GtkWindow *parent_window,
+                 NMClient *client,
                  NMRemoteSettingsSystem *system_settings,
                  NMAGConfSettings *gconf_settings,
                  const char **out_secrets_setting_name,
@@ -134,6 +135,9 @@ ce_page_dsl_new (NMConnection *connection,
 	self = CE_PAGE_DSL (g_object_new (CE_TYPE_PAGE_DSL,
 	                                  CE_PAGE_CONNECTION, connection,
 	                                  CE_PAGE_PARENT_WINDOW, parent_window,
+	                                  CE_PAGE_CLIENT, client,
+	                                  CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                  CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                  NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.h
index e132756..147872d 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-dsl.h
@@ -49,6 +49,7 @@ GType ce_page_dsl_get_type (void);
 
 CEPage *ce_page_dsl_new (NMConnection *connection,
                          GtkWindow *parent,
+                         NMClient *client,
                          NMRemoteSettingsSystem *system_settings,
                          NMAGConfSettings *gconf_settings,
                          const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.c
index 58e8c65..cc32254 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.c
@@ -117,6 +117,7 @@ finish_setup (CEPageInfiniband *self, gpointer unused, GError *error, gpointer u
 CEPage *
 ce_page_infiniband_new (NMConnection *connection,
                         GtkWindow *parent_window,
+                        NMClient *client,
                         NMRemoteSettingsSystem *system_settings,
                         NMAGConfSettings *gconf_settings,
                         const char **out_secrets_setting_name,
@@ -129,6 +130,9 @@ ce_page_infiniband_new (NMConnection *connection,
 	self = CE_PAGE_INFINIBAND (g_object_new (CE_TYPE_PAGE_INFINIBAND,
 	                           CE_PAGE_CONNECTION, connection,
 	                           CE_PAGE_PARENT_WINDOW, parent_window,
+	                           CE_PAGE_CLIENT, client,
+	                           CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                           CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                           NULL));
 
 	parent = CE_PAGE (self);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.h
index e3b4c45..77bcb39 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-infiniband.h
@@ -47,6 +47,7 @@ GType ce_page_infiniband_get_type (void);
 
 CEPage *ce_page_infiniband_new (NMConnection *connection,
                                 GtkWindow *parent,
+                                NMClient *client,
                                 NMRemoteSettingsSystem *system_settings,
                                 NMAGConfSettings *gconf_settings,
                                 const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.c
index 5f06169..3cb9f13 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.c
@@ -800,6 +800,7 @@ finish_setup (CEPageIP4 *self, gpointer unused, GError *error, gpointer user_dat
 CEPage *
 ce_page_ip4_new (NMConnection *connection,
                  GtkWindow *parent_window,
+                 NMClient *client,
                  NMRemoteSettingsSystem *system_settings,
                  NMAGConfSettings *gconf_settings,
                  const char **out_secrets_setting_name,
@@ -813,6 +814,9 @@ ce_page_ip4_new (NMConnection *connection,
 	self = CE_PAGE_IP4 (g_object_new (CE_TYPE_PAGE_IP4,
 	                                  CE_PAGE_CONNECTION, connection,
 	                                  CE_PAGE_PARENT_WINDOW, parent_window,
+	                                  CE_PAGE_CLIENT, client,
+	                                  CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                  CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                  NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.h
index 7a31054..6941b1e 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip4.h
@@ -49,6 +49,7 @@ GType ce_page_ip4_get_type (void);
 
 CEPage *ce_page_ip4_new (NMConnection *connection,
                          GtkWindow *parent,
+                         NMClient *client,
                          NMRemoteSettingsSystem *system_settings,
                          NMAGConfSettings *gconf_settings,
                          const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.c
index 22eebb9..9ec7d83 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.c
@@ -783,6 +783,7 @@ finish_setup (CEPageIP6 *self, gpointer unused, GError *error, gpointer user_dat
 CEPage *
 ce_page_ip6_new (NMConnection *connection,
                  GtkWindow *parent_window,
+                 NMClient *client,
                  NMRemoteSettingsSystem *system_settings,
                  NMAGConfSettings *gconf_settings,
                  const char **out_secrets_setting_name,
@@ -796,6 +797,9 @@ ce_page_ip6_new (NMConnection *connection,
 	self = CE_PAGE_IP6 (g_object_new (CE_TYPE_PAGE_IP6,
 	                                  CE_PAGE_CONNECTION, connection,
 	                                  CE_PAGE_PARENT_WINDOW, parent_window,
+	                                  CE_PAGE_CLIENT, client,
+	                                  CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                  CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                  NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.h
index 8917ddc..ee2def9 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ip6.h
@@ -49,6 +49,7 @@ GType ce_page_ip6_get_type (void);
 
 CEPage *ce_page_ip6_new (NMConnection *connection,
                          GtkWindow *parent,
+                         NMClient *client,
                          NMRemoteSettingsSystem *system_settings,
                          NMAGConfSettings *gconf_settings,
                          const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.c
index 650728b..ab208fe 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.c
@@ -287,6 +287,7 @@ finish_setup (CEPageMobile *self, gpointer unused, GError *error, gpointer user_
 CEPage *
 ce_page_mobile_new (NMConnection *connection,
                     GtkWindow *parent_window,
+                    NMClient *client,
                     NMRemoteSettingsSystem *system_settings,
                     NMAGConfSettings *gconf_settings,
                     const char **out_secrets_setting_name,
@@ -299,6 +300,9 @@ ce_page_mobile_new (NMConnection *connection,
 	self = CE_PAGE_MOBILE (g_object_new (CE_TYPE_PAGE_MOBILE,
 	                                     CE_PAGE_CONNECTION, connection,
 	                                     CE_PAGE_PARENT_WINDOW, parent_window,
+	                                     CE_PAGE_CLIENT, client,
+	                                     CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                     CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                     NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.h
index fdb93a3..4e2189a 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-mobile.h
@@ -49,6 +49,7 @@ GType ce_page_mobile_get_type (void);
 
 CEPage *ce_page_mobile_new (NMConnection *connection,
                             GtkWindow *parent,
+                            NMClient *client,
                             NMRemoteSettingsSystem *system_settings,
                             NMAGConfSettings *gconf_settings,
                             const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.c
index 8ecfefb..4cc8e56 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.c
@@ -264,6 +264,7 @@ finish_setup (CEPagePpp *self, gpointer unused, GError *error, gpointer user_dat
 CEPage *
 ce_page_ppp_new (NMConnection *connection,
                  GtkWindow *parent_window,
+                 NMClient *client,
                  NMRemoteSettingsSystem *system_settings,
                  NMAGConfSettings *gconf_settings,
                  const char **out_secrets_setting_name,
@@ -277,6 +278,9 @@ ce_page_ppp_new (NMConnection *connection,
 	self = CE_PAGE_PPP (g_object_new (CE_TYPE_PAGE_PPP,
 	                                  CE_PAGE_CONNECTION, connection,
 	                                  CE_PAGE_PARENT_WINDOW, parent_window,
+	                                  CE_PAGE_CLIENT, client,
+	                                  CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                  CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                  NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.h
index 56ef48d..e33f60f 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-ppp.h
@@ -49,6 +49,7 @@ GType ce_page_ppp_get_type (void);
 
 CEPage *ce_page_ppp_new (NMConnection *connection,
                          GtkWindow *parent,
+                         NMClient *client,
                          NMRemoteSettingsSystem *system_settings,
                          NMAGConfSettings *gconf_settings,
                          const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.c
new file mode 100644
index 0000000..9b52340
--- /dev/null
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.c
@@ -0,0 +1,805 @@
+/* -*- Mode: C; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
+/* NetworkManager Connection editor -- Connection editor for NetworkManager
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2008 - 2011 Red Hat, Inc.
+ */
+
+#include "config.h"
+
+#include <stdlib.h>
+#include <string.h>
+#include <net/ethernet.h>
+#include <netinet/ether.h>
+
+#include <gtk/gtk.h>
+#include <glib/gi18n.h>
+
+#include <nm-setting-connection.h>
+#include <nm-setting-vlan.h>
+#include <nm-device-ethernet.h>
+#include <nm-utils.h>
+
+#include "page-vlan.h"
+
+G_DEFINE_TYPE (CEPageVlan, ce_page_vlan, CE_TYPE_PAGE)
+
+#define CE_PAGE_VLAN_GET_PRIVATE(o) (G_TYPE_INSTANCE_GET_PRIVATE ((o), CE_TYPE_PAGE_VLAN, CEPageVlanPrivate))
+
+typedef struct {
+	char *label;
+	NMDevice *device;
+	NMConnection *connection;
+} VlanParent;
+
+typedef struct {
+	NMSettingVlan *setting;
+	NMSetting *s_hw;
+
+	VlanParent **parents;
+	char **parent_labels;
+
+	GtkComboBox *parent;
+	GtkEntry *parent_entry;
+	GtkSpinButton *id_entry;
+	GtkEntry *name_entry;
+	GtkEntry *cloned_mac;
+	GtkSpinButton *mtu;
+
+	char *last_parent;
+	int last_id;
+} CEPageVlanPrivate;
+
+static void
+vlan_private_init (CEPageVlan *self)
+{
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	GtkBuilder *builder;
+	GtkWidget *align;
+	GtkLabel *label;
+
+	builder = CE_PAGE (self)->builder;
+
+#if GTK_CHECK_VERSION(2,24,0)
+	priv->parent = GTK_COMBO_BOX (gtk_combo_box_text_new_with_entry ());
+	gtk_combo_box_set_entry_text_column (priv->parent, 0);
+#else
+	priv->parent = GTK_COMBO_BOX (gtk_combo_box_entry_new_text ());
+	gtk_combo_box_entry_set_text_column (GTK_COMBO_BOX_ENTRY (priv->parent), 0);
+#endif
+	priv->parent_entry = GTK_ENTRY (gtk_bin_get_child (GTK_BIN (priv->parent)));
+
+	align = GTK_WIDGET (gtk_builder_get_object (builder, "vlan_parent_alignment"));
+	gtk_container_add (GTK_CONTAINER (align), GTK_WIDGET (priv->parent));
+	gtk_widget_show_all (GTK_WIDGET (priv->parent));
+
+	/* Set mnemonic widget for parent label */
+	label = GTK_LABEL (GTK_WIDGET (gtk_builder_get_object (builder, "vlan_parent_label")));
+	gtk_label_set_mnemonic_widget (label, GTK_WIDGET (priv->parent));
+
+	priv->id_entry = GTK_SPIN_BUTTON (GTK_WIDGET (gtk_builder_get_object (builder, "vlan_id_entry")));
+	priv->name_entry = GTK_ENTRY (GTK_WIDGET (gtk_builder_get_object (builder, "vlan_name_entry")));
+	priv->cloned_mac = GTK_ENTRY (GTK_WIDGET (gtk_builder_get_object (builder, "vlan_cloned_mac_entry")));
+	priv->mtu = GTK_SPIN_BUTTON (GTK_WIDGET (gtk_builder_get_object (builder, "vlan_mtu")));
+}
+
+static void
+stuff_changed (GtkWidget *w, gpointer user_data)
+{
+	ce_page_changed (CE_PAGE (user_data));
+}
+
+static void name_changed (GtkWidget *widget, gpointer user_data);
+
+static void
+sync_iface (CEPageVlan *self, GtkEntry *changed_entry)
+{
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	const char *iface, *iface_end, *parent_text;
+	char *new_iface, *end;
+	int iface_id, iface_len, parent_iface_len, id;
+	gboolean vlan_style_name;
+
+	iface = gtk_entry_get_text (priv->name_entry);
+	if (!*iface)
+		return;
+
+	if (g_str_has_prefix (iface, "vlan")) {
+		iface_end = iface + 4;
+		iface_id = strtoul (iface_end, &end, 10);
+		vlan_style_name = TRUE;
+	} else if ((iface_end = strchr (iface, '.'))) {
+		iface_id = strtoul (iface_end + 1, &end, 10);
+		vlan_style_name = FALSE;
+	} else
+		return;
+	if (*end)
+		return;
+	iface_len = iface_end - iface;
+
+	parent_text = gtk_entry_get_text (priv->parent_entry);
+	parent_iface_len = strcspn (parent_text, " ");
+	id = gtk_spin_button_get_value_as_int (priv->id_entry);
+
+	if (changed_entry == priv->name_entry) {
+		/* The user changed the interface name. If it now matches
+		 * parent and id, then update the last_* members, so we'll
+		 * start keeping it in sync again.
+		 */
+		if (iface_id == id)
+			priv->last_id = iface_id;
+		else
+			priv->last_id = -1;
+
+		g_free (priv->last_parent);
+		if (   iface_len == parent_iface_len
+		    && !strncmp (iface, parent_text, iface_len))
+			priv->last_parent = g_strndup (iface, iface_len);
+		else
+			priv->last_parent = NULL;
+		return;
+	}
+
+	/* The user changed the parent or ID; if the previous parent and
+	 * ID matched the interface name, then update the interface name
+	 * to match the new one as well.
+	 */
+	if (iface_id != priv->last_id)
+		return;
+	if (   !vlan_style_name
+	    && priv->last_parent
+	    && strncmp (iface, priv->last_parent, iface_len) != 0)
+		return;
+
+	if (vlan_style_name) {
+		new_iface = g_strdup_printf ("vlan%d", id);
+	} else if (changed_entry == priv->parent_entry) {
+		new_iface = g_strdup_printf ("%.*s.%d",
+		                             parent_iface_len,
+		                             parent_text, id);
+	} else {
+		new_iface = g_strdup_printf ("%.*s.%d", iface_len, iface, id);
+	}
+
+	g_signal_handlers_block_by_func (priv->name_entry, G_CALLBACK (name_changed), self);
+	gtk_entry_set_text (priv->name_entry, new_iface);
+	g_signal_handlers_unblock_by_func (priv->name_entry, G_CALLBACK (name_changed), self);
+
+	g_free (new_iface);
+
+	if (changed_entry == priv->parent_entry) {
+		g_free (priv->last_parent);
+		priv->last_parent = g_strndup (parent_text, parent_iface_len);
+	} else if (changed_entry == GTK_ENTRY (priv->id_entry))
+		priv->last_id = id;
+}
+
+static void
+parent_changed (GtkWidget *widget, gpointer user_data)
+{
+	CEPageVlan *self = user_data;
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	int parent_id;
+
+	parent_id = gtk_combo_box_get_active (GTK_COMBO_BOX (priv->parent));
+	if (parent_id > -1 && priv->parents[parent_id]->device != NULL) {
+		gtk_widget_set_sensitive (GTK_WIDGET (priv->cloned_mac), TRUE);
+		gtk_widget_set_sensitive (GTK_WIDGET (priv->mtu), TRUE);
+	} else {
+		gtk_widget_set_sensitive (GTK_WIDGET (priv->cloned_mac), FALSE);
+		gtk_entry_set_text (priv->cloned_mac, "");
+		gtk_widget_set_sensitive (GTK_WIDGET (priv->mtu), FALSE);
+		gtk_spin_button_set_value (priv->mtu, 1500);
+	}
+
+	sync_iface (self, priv->parent_entry);
+	ce_page_changed (CE_PAGE (self));
+}
+
+static void
+name_changed (GtkWidget *w, gpointer user_data)
+{
+	CEPageVlan *self = user_data;
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+
+	sync_iface (self, priv->name_entry);
+	ce_page_changed (CE_PAGE (self));
+}
+
+static void
+id_changed (GtkWidget *w, gpointer user_data)
+{
+	CEPageVlan *self = user_data;
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+
+	sync_iface (self, GTK_ENTRY (priv->id_entry));
+	ce_page_changed (CE_PAGE (self));
+}
+
+static int
+sort_parents (gconstpointer a, gconstpointer b)
+{
+	VlanParent *pa = *(VlanParent **)a;
+	VlanParent *pb = *(VlanParent **)b;
+
+	return strcmp (pa->label, pb->label);
+}
+
+static GSList *
+get_vlan_devices (CEPageVlan *self)
+{
+	const GPtrArray *devices_array;
+	GSList *devices;
+	NMDevice *device;
+	int i;
+	
+	devices_array = nm_client_get_devices (CE_PAGE (self)->client);
+	devices = NULL;
+	for (i = 0; devices_array && (i < devices_array->len); i++) {
+		device = devices_array->pdata[i];
+
+		/* FIXME: this supported-device-types logic belongs in NM somewhere. */
+		if (!NM_IS_DEVICE_ETHERNET (device))
+			continue;
+
+		devices = g_slist_prepend (devices, device);
+	}
+
+	return devices;
+}
+
+/* based on 0.9.7 nm-device-ethernet.c:connection_compatible */
+static gboolean
+ethernet_check_compatible (NMDevice *device, NMConnection *connection)
+{
+	NMSettingConnection *s_con;
+	NMSettingWired *s_wired;
+	const char *ctype;
+	const GByteArray *mac;
+	const char *perm_str;
+	struct ether_addr *perm_mac;
+
+	s_con = (NMSettingConnection *) nm_connection_get_setting (connection, NM_TYPE_SETTING_CONNECTION);
+	g_assert (s_con);
+
+	ctype = nm_setting_connection_get_connection_type (s_con);
+	if (strcmp (ctype, NM_SETTING_WIRED_SETTING_NAME) != 0)
+		return FALSE;
+
+	s_wired = nm_connection_get_setting_wired (connection);
+	if (!s_wired)
+		return FALSE;
+
+	/* Check MAC address */
+	perm_str = nm_device_ethernet_get_permanent_hw_address (NM_DEVICE_ETHERNET (device));
+	if (perm_str) {
+		perm_mac = ether_aton (perm_str);
+		if (!perm_mac)
+			return FALSE;
+
+		mac = nm_setting_wired_get_mac_address (s_wired);
+		if (mac && perm_mac && memcmp (mac->data, perm_mac->ether_addr_octet, ETH_ALEN))
+				return FALSE;
+	}
+
+	return TRUE;
+}
+
+/* based on 0.9.8 ce_page_setup_mac_combo */
+static void
+setup_mac_combo (CEPage *self, GtkComboBox *combo,
+                 const char *current_mac, char **mac_list)
+{
+	char **iter, *active_mac = NULL;
+	int current_mac_len;
+	GtkWidget *entry;
+
+	if (current_mac)
+		current_mac_len = strlen (current_mac);
+	else
+		current_mac_len = -1;
+
+	for (iter = mac_list; iter && *iter; iter++) {
+#if GTK_CHECK_VERSION (2,24,0)
+		gtk_combo_box_text_append_text (GTK_COMBO_BOX_TEXT (combo), *iter);
+#else
+		gtk_combo_box_append_text (combo, *iter);
+#endif
+		if (   current_mac
+		    && g_ascii_strncasecmp (*iter, current_mac, current_mac_len) == 0
+		    && ((*iter)[current_mac_len] == '\0' || (*iter)[current_mac_len] == ' '))
+			active_mac = *iter;
+	}
+
+	if (current_mac) {
+		if (!active_mac) {
+#if GTK_CHECK_VERSION (2,24,0)
+			gtk_combo_box_text_prepend_text (GTK_COMBO_BOX_TEXT (combo), current_mac);
+#else
+			gtk_combo_box_prepend_text (combo, current_mac);
+#endif
+		}
+
+		entry = gtk_bin_get_child (GTK_BIN (combo));
+		if (entry)
+			gtk_entry_set_text (GTK_ENTRY (entry), active_mac ? active_mac : current_mac);
+	}
+}
+
+static void
+build_vlan_parent_list (CEPageVlan *self, GSList *devices)
+{
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	GSList *connections, *c_iter, *d_iter;
+	GPtrArray *parents;
+	VlanParent *parent;
+	NMDevice *device;
+	const char *iface, *mac, *id;
+	int i;
+
+	parents = g_ptr_array_new ();
+
+	/* Devices with no L2 configuration can spawn VLANs directly. At the
+	 * moment, this means just Ethernet.
+	 */
+	for (d_iter = devices; d_iter; d_iter = d_iter->next) {
+		device = d_iter->data;
+
+		if (!NM_IS_DEVICE_ETHERNET (device))
+			continue;
+
+		parent = g_slice_new (VlanParent);
+		parent->device = device;
+		parent->connection = NULL;
+
+		iface = nm_device_get_iface (device);
+		mac = nm_device_ethernet_get_permanent_hw_address (NM_DEVICE_ETHERNET (device));
+		parent->label = g_strdup_printf ("%s (%s)", iface, mac);
+
+		g_ptr_array_add (parents, parent);
+	}
+
+	/* Otherwise, VLANs have to be built on top of configured connections */
+	connections = ce_page_list_connections (CE_PAGE (self)->system_settings,
+	                                        CE_PAGE (self)->gconf_settings);
+	for (c_iter = connections; c_iter; c_iter = c_iter->next) {
+		NMConnection *candidate = c_iter->data;
+		NMSettingConnection *s_con = nm_connection_get_setting_connection (candidate);
+
+		if (nm_setting_connection_get_master (s_con))
+			continue;
+
+		for (d_iter = devices; d_iter; d_iter = d_iter->next) {
+			device = d_iter->data;
+
+			if (ethernet_check_compatible (device, candidate)) {
+				parent = g_slice_new (VlanParent);
+				parent->device = device;
+				parent->connection = candidate;
+
+				iface = nm_device_get_iface (device);
+				id = nm_setting_connection_get_id (s_con);
+
+				parent->label = g_strdup_printf ("%s (%s)", iface, id);
+				g_ptr_array_add (parents, parent);
+				/* no break here; the connection may apply to multiple devices */
+			}
+		}
+	}
+
+	g_slist_free (connections);
+
+	g_ptr_array_sort (parents, sort_parents);
+	g_ptr_array_add (parents, NULL);
+
+	priv->parent_labels = g_new (char *, parents->len);
+	priv->parents = (VlanParent **)g_ptr_array_free (parents, FALSE);
+
+	for (i = 0; priv->parents[i]; i++)
+		priv->parent_labels[i] = priv->parents[i]->label;
+	priv->parent_labels[i] = NULL;
+}
+
+static NMConnection *
+get_connection_by_uuid (GSList *connections, const char *uuid)
+{
+	GSList *iter;
+	NMConnection *conn;
+	const char *conn_uuid;
+
+	for (iter = connections; iter; iter = iter->next) {
+		conn = iter->data;
+		conn_uuid = nm_connection_get_uuid (conn);
+		if (!strcmp (conn_uuid, uuid))
+			return conn;
+	}
+	return NULL;
+}
+
+static void
+populate_ui (CEPageVlan *self)
+{
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	GSList *devices, *d_iter, *connections;
+	NMConnection *parent_connection = NULL;
+	NMDevice *device, *parent_device = NULL;
+	const char *parent, *iface, *current_parent;
+	int i, mtu_def, mtu_val;
+
+	devices = get_vlan_devices (self);
+	connections = ce_page_list_connections (CE_PAGE (self)->system_settings,
+	                                        CE_PAGE (self)->gconf_settings);
+
+	/* Parent */
+	build_vlan_parent_list (self, devices);
+
+	parent = nm_setting_vlan_get_parent (priv->setting);
+	if (parent) {
+		/* UUID? */
+		parent_connection = get_connection_by_uuid (connections, parent);
+		if (!parent_connection) {
+			/* Interface name? */
+			for (d_iter = devices; d_iter; d_iter = d_iter->next) {
+				device = d_iter->data;
+
+				if (!g_strcmp0 (parent, nm_device_get_iface (device))) {
+					parent_device = device;
+					break;
+				}
+			}
+		}
+	}
+
+	/* If NMSettingVlan:parent didn't indicate a device, but we have a
+	 * wired setting, figure out the device from that.
+	 */
+	if (priv->s_hw && !parent_device) {
+		const GByteArray *mac;
+		const char *device_mac_str;
+		char *mac_str;
+
+		if (NM_IS_SETTING_WIRED (priv->s_hw))
+			mac = nm_setting_wired_get_mac_address (NM_SETTING_WIRED (priv->s_hw));
+		else
+			mac = NULL;
+
+		if (mac) {
+			mac_str = nm_utils_hwaddr_ntoa (mac->data, ARPHRD_ETHER);
+
+			for (d_iter = devices; d_iter; d_iter = d_iter->next) {
+				device = d_iter->data;
+
+				if (NM_IS_DEVICE_ETHERNET (device))
+					device_mac_str = nm_device_ethernet_get_permanent_hw_address (NM_DEVICE_ETHERNET (device));
+				else
+					device_mac_str = NULL;
+
+				if (!g_strcmp0 (mac_str, device_mac_str)) {
+					parent_device = device;
+					break;
+				}
+			}
+		}
+	}
+
+	current_parent = parent;
+	if (parent_device || parent_connection) {
+		for (i = 0; priv->parents[i]; i++) {
+			if (parent_device && parent_device != priv->parents[i]->device)
+				continue;
+			if (parent_connection && parent_connection != priv->parents[i]->connection)
+				continue;
+
+			current_parent = priv->parents[i]->label;
+			break;
+		}
+	}
+	setup_mac_combo (CE_PAGE (self), priv->parent, current_parent, priv->parent_labels);
+	g_signal_connect (priv->parent, "changed", G_CALLBACK (parent_changed), self);
+
+	if (current_parent)
+		priv->last_parent = g_strndup (current_parent, strcspn (current_parent, " "));
+
+	/* Name */
+	iface = nm_setting_vlan_get_interface_name (priv->setting);
+	if (iface)
+		gtk_entry_set_text (priv->name_entry, iface);
+	g_signal_connect (priv->name_entry, "changed", G_CALLBACK (name_changed), self);
+
+	/* ID */
+	priv->last_id = nm_setting_vlan_get_id (priv->setting);
+	gtk_spin_button_set_value (priv->id_entry, priv->last_id);
+	g_signal_connect (priv->id_entry, "value-changed", G_CALLBACK (id_changed), self);
+
+	/* Cloned MAC address */
+	if (NM_IS_SETTING_WIRED (priv->s_hw)) {
+		ce_page_mac_to_entry (nm_setting_wired_get_cloned_mac_address (NM_SETTING_WIRED (priv->s_hw)),
+		                      ARPHRD_ETHER, priv->cloned_mac);
+	}
+	g_signal_connect (priv->cloned_mac, "changed", G_CALLBACK (stuff_changed), self);
+
+	/* MTU */
+	if (NM_IS_SETTING_WIRED (priv->s_hw)) {
+		mtu_def = ce_get_property_default (priv->s_hw, NM_SETTING_WIRED_MTU);
+		mtu_val = nm_setting_wired_get_mtu (NM_SETTING_WIRED (priv->s_hw));
+	} else {
+		mtu_def = mtu_val = 1500;
+	}
+	g_signal_connect (priv->mtu, "output",
+	                  G_CALLBACK (ce_spin_output_with_default),
+	                  GINT_TO_POINTER (mtu_def));
+
+	gtk_spin_button_set_value (priv->mtu, (gdouble) mtu_val);
+	g_signal_connect (priv->mtu, "value-changed", G_CALLBACK (stuff_changed), self);
+
+	g_slist_free (devices);
+	g_slist_free (connections);
+}
+
+static void
+finish_setup (CEPageVlan *self, gpointer unused, GError *error, gpointer user_data)
+{
+	if (error)
+		return;
+
+	populate_ui (self);
+}
+
+CEPage *
+ce_page_vlan_new (NMConnection *connection,
+                  GtkWindow *parent_window,
+                  NMClient *client,
+                  NMRemoteSettingsSystem *system_settings,
+                  NMAGConfSettings *gconf_settings,
+                  const char **out_secrets_setting_name,
+                  GError **error)
+{
+	CEPageVlan *self;
+	CEPageVlanPrivate *priv;
+	CEPage *parent;
+
+	self = CE_PAGE_VLAN (g_object_new (CE_TYPE_PAGE_VLAN,
+	                                   CE_PAGE_CONNECTION, connection,
+	                                   CE_PAGE_PARENT_WINDOW, parent_window,
+	                                   CE_PAGE_CLIENT, client,
+	                                   CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                   CE_PAGE_GCONF_SETTINGS, gconf_settings,
+	                                   NULL));
+	parent = CE_PAGE (self);
+
+	parent->builder = gtk_builder_new ();
+
+	if (!gtk_builder_add_from_file (parent->builder, UIDIR "/ce-page-vlan.ui", error)) {
+		g_warning ("Couldn't load builder file: %s", (*error)->message);
+		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("Could not load VLAN user interface."));
+		g_object_unref (self);
+		return NULL;
+	}
+
+	parent->page = GTK_WIDGET (gtk_builder_get_object (parent->builder, "VlanPage"));
+	if (!parent->page) {
+		g_set_error_literal (error, NMA_ERROR, NMA_ERROR_GENERIC, _("Could not load VLAN user interface."));
+		g_object_unref (self);
+		return NULL;
+	}
+	g_object_ref_sink (parent->page);
+
+	parent->title = g_strdup (_("VLAN"));
+
+	vlan_private_init (self);
+	priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+
+	priv->setting = nm_connection_get_setting_vlan (connection);
+	if (!priv->setting) {
+		priv->setting = NM_SETTING_VLAN (nm_setting_vlan_new ());
+		nm_connection_add_setting (connection, NM_SETTING (priv->setting));
+	}
+	priv->s_hw = nm_connection_get_setting (connection, NM_TYPE_SETTING_WIRED);
+
+	g_signal_connect (self, "initialized", G_CALLBACK (finish_setup), NULL);
+
+	return CE_PAGE (self);
+}
+
+static void
+ui_to_setting (CEPageVlan *self)
+{
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	NMConnection *connection = CE_PAGE (self)->connection;
+	NMSettingConnection *s_con = nm_connection_get_setting_connection (connection);
+	GByteArray *cloned_mac = NULL;
+	VlanParent *parent = NULL;
+	int parent_id, vid;
+	const char *parent_iface = NULL, *parent_uuid = NULL;
+	const char *slave_type;
+	const char *iface;
+	char *tmp_parent_iface = NULL;
+	GType hwtype;
+	gboolean mtu_set;
+	int mtu;
+
+	parent_id = gtk_combo_box_get_active (GTK_COMBO_BOX (priv->parent));
+	if (parent_id == -1) {
+		parent_iface = gtk_entry_get_text (priv->parent_entry);
+		tmp_parent_iface = g_strndup (parent_iface, strcspn (parent_iface, " "));
+		parent_iface = tmp_parent_iface;
+	} else {
+		parent = priv->parents[parent_id];
+		if (parent->connection)
+			parent_uuid = nm_connection_get_uuid (parent->connection);
+		if (parent->device)
+			parent_iface = nm_device_get_iface (parent->device);
+	}
+
+	g_assert (parent_uuid != NULL || parent_iface != NULL);
+
+	slave_type = nm_setting_connection_get_slave_type (s_con);
+	if (parent_uuid) {
+		/* Update NMSettingConnection:master if it's set, but don't
+		 * set it if it's not.
+		 */
+		if (!g_strcmp0 (slave_type, NM_SETTING_VLAN_SETTING_NAME)) {
+			g_object_set (s_con,
+			              NM_SETTING_CONNECTION_MASTER, parent_uuid,
+			              NULL);
+		}
+	} else if (!g_strcmp0 (slave_type, NM_SETTING_VLAN_SETTING_NAME)) {
+		g_object_set (s_con,
+		              NM_SETTING_CONNECTION_MASTER, NULL,
+		              NM_SETTING_CONNECTION_SLAVE_TYPE, NULL,
+		              NULL);
+	}
+
+	if (parent && NM_IS_DEVICE_ETHERNET (parent->device))
+		hwtype = NM_TYPE_SETTING_WIRED;
+	else
+		hwtype = G_TYPE_NONE;
+
+	if (priv->s_hw && G_OBJECT_TYPE (priv->s_hw) != hwtype) {
+		nm_connection_remove_setting (connection, G_OBJECT_TYPE (priv->s_hw));
+		priv->s_hw = NULL;
+	}
+
+	iface = gtk_entry_get_text (priv->name_entry);
+	vid = gtk_spin_button_get_value_as_int (priv->id_entry);
+
+	g_object_set (priv->setting,
+	              NM_SETTING_VLAN_PARENT, parent_uuid ? parent_uuid : parent_iface,
+	              NM_SETTING_VLAN_INTERFACE_NAME, iface,
+	              NM_SETTING_VLAN_ID, vid,
+	              NULL);
+
+	if (hwtype != G_TYPE_NONE) {
+		cloned_mac = ce_page_entry_to_mac (priv->cloned_mac, ARPHRD_ETHER, NULL);
+		mtu_set = g_ascii_isdigit (*gtk_entry_get_text (GTK_ENTRY (priv->mtu)));
+		mtu = gtk_spin_button_get_value_as_int (priv->mtu);
+
+		if (cloned_mac || mtu_set) {
+			if (!priv->s_hw) {
+				priv->s_hw = g_object_new (hwtype, NULL);
+				nm_connection_add_setting (connection, priv->s_hw);
+			}
+
+			g_object_set (priv->s_hw,
+			              NM_SETTING_WIRED_CLONED_MAC_ADDRESS, cloned_mac,
+			              NM_SETTING_WIRED_MTU, (guint32) mtu,
+			              NULL);
+
+			if (cloned_mac)
+				g_byte_array_free (cloned_mac, TRUE);
+		} else if (priv->s_hw) {
+			nm_connection_remove_setting (connection, G_OBJECT_TYPE (priv->s_hw));
+			priv->s_hw = NULL;
+		}
+	}
+
+	g_free (tmp_parent_iface);
+}
+
+static gboolean
+validate (CEPage *page, NMConnection *connection, GError **error)
+{
+	CEPageVlan *self = CE_PAGE_VLAN (page);
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	gboolean invalid = FALSE;
+	GByteArray *ignore;
+	int parent_id;
+	const char *parent;
+	char *parent_iface;
+
+	parent_id = gtk_combo_box_get_active (GTK_COMBO_BOX (priv->parent));
+	if (parent_id == -1) {
+		gboolean valid;
+
+		parent = gtk_entry_get_text (priv->parent_entry);
+		parent_iface = g_strndup (parent, strcspn (parent, " "));
+		valid = nm_utils_iface_valid_name (parent_iface);
+		g_free (parent_iface);
+		if (!valid)
+			return FALSE;
+	}
+
+	ignore = ce_page_entry_to_mac (priv->cloned_mac, ARPHRD_ETHER, &invalid);
+	if (invalid)
+		return FALSE;
+	if (ignore)
+		g_byte_array_free (ignore, TRUE);
+
+	ui_to_setting (self);
+
+	if (   priv->s_hw
+	    && !nm_setting_verify (priv->s_hw, NULL, error))
+		return FALSE;
+
+	return nm_setting_verify (NM_SETTING (priv->setting), NULL, error);
+}
+
+static void
+finalize (GObject *object)
+{
+	CEPageVlan *self = CE_PAGE_VLAN (object);
+	CEPageVlanPrivate *priv = CE_PAGE_VLAN_GET_PRIVATE (self);
+	int i;
+
+	g_free (priv->last_parent);
+
+	for (i = 0; priv->parents[i]; i++)
+		g_slice_free (VlanParent, priv->parents[i]);
+	g_free (priv->parents);
+
+	G_OBJECT_CLASS (ce_page_vlan_parent_class)->finalize (object);
+}
+
+static void
+ce_page_vlan_init (CEPageVlan *self)
+{
+}
+
+static void
+ce_page_vlan_class_init (CEPageVlanClass *vlan_class)
+{
+	GObjectClass *object_class = G_OBJECT_CLASS (vlan_class);
+	CEPageClass *parent_class = CE_PAGE_CLASS (vlan_class);
+
+	g_type_class_add_private (object_class, sizeof (CEPageVlanPrivate));
+
+	/* virtual methods */
+	object_class->finalize = finalize;
+	parent_class->validate = validate;
+}
+
+
+void
+vlan_connection_new (GtkWindow *parent,
+                     const char *detail,
+                     NMRemoteSettingsSystem *system_settings,
+                     NMAGConfSettings *gconf_settings,
+                     PageNewConnectionResultFunc result_func,
+                     gpointer user_data)
+{
+	NMConnection *connection;
+
+	connection = ce_page_new_connection (_("VLAN connection %d"),
+	                                     NM_SETTING_VLAN_SETTING_NAME,
+	                                     TRUE,
+	                                     system_settings,
+	                                     gconf_settings,
+	                                     user_data);
+	nm_connection_add_setting (connection, nm_setting_vlan_new ());
+
+	(*result_func) (connection, FALSE, NULL, user_data);
+}
+
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.h
new file mode 100644
index 0000000..bf3e798
--- /dev/null
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vlan.h
@@ -0,0 +1,64 @@
+/* -*- Mode: C; tab-width: 4; indent-tabs-mode: t; c-basic-offset: 4 -*- */
+/* NetworkManager Connection editor -- Connection editor for NetworkManager
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License along
+ * with this program; if not, write to the Free Software Foundation, Inc.,
+ * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+ *
+ * (C) Copyright 2008 - 2011 Red Hat, Inc.
+ */
+
+#ifndef __PAGE_VLAN_H__
+#define __PAGE_VLAN_H__
+
+#include <nm-connection.h>
+
+#include <glib.h>
+#include <glib-object.h>
+
+#include "ce-page.h"
+
+#define CE_TYPE_PAGE_VLAN            (ce_page_vlan_get_type ())
+#define CE_PAGE_VLAN(obj)            (G_TYPE_CHECK_INSTANCE_CAST ((obj), CE_TYPE_PAGE_VLAN, CEPageVlan))
+#define CE_PAGE_VLAN_CLASS(klass)    (G_TYPE_CHECK_CLASS_CAST ((klass), CE_TYPE_PAGE_VLAN, CEPageVlanClass))
+#define CE_IS_PAGE_VLAN(obj)         (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CE_TYPE_PAGE_VLAN))
+#define CE_IS_PAGE_VLAN_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((obj), CE_TYPE_PAGE_VLAN))
+#define CE_PAGE_VLAN_GET_CLASS(obj)  (G_TYPE_INSTANCE_GET_CLASS ((obj), CE_TYPE_PAGE_VLAN, CEPageVlanClass))
+
+typedef struct {
+	CEPage parent;
+} CEPageVlan;
+
+typedef struct {
+	CEPageClass parent;
+} CEPageVlanClass;
+
+GType ce_page_vlan_get_type (void);
+
+CEPage *ce_page_vlan_new (NMConnection *connection,
+                          GtkWindow *parent,
+                          NMClient *client,
+                          NMRemoteSettingsSystem *system_settings,
+                          NMAGConfSettings *gconf_settings,
+                          const char **out_secrets_setting_name,
+                          GError **error);
+
+void vlan_connection_new (GtkWindow *parent,
+                          const char *detail,
+                          NMRemoteSettingsSystem *system_settings,
+                          NMAGConfSettings *gconf_settings,
+                          PageNewConnectionResultFunc result_func,
+                          gpointer user_data);
+
+#endif  /* __PAGE_VLAN_H__ */
+
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.c
index a62ff71..e4579f2 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.c
@@ -92,6 +92,7 @@ finish_setup (CEPageVpn *self, gpointer unused, GError *error, gpointer user_dat
 CEPage *
 ce_page_vpn_new (NMConnection *connection,
                  GtkWindow *parent_window,
+                 NMClient *client,
                  NMRemoteSettingsSystem *system_settings,
                  NMAGConfSettings *gconf_settings,
                  const char **out_secrets_setting_name,
@@ -105,6 +106,9 @@ ce_page_vpn_new (NMConnection *connection,
 	self = CE_PAGE_VPN (g_object_new (CE_TYPE_PAGE_VPN,
 	                                  CE_PAGE_CONNECTION, connection,
 	                                  CE_PAGE_PARENT_WINDOW, parent_window,
+	                                  CE_PAGE_CLIENT, client,
+	                                  CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                  CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                  NULL));
 	parent = CE_PAGE (self);
 	priv = CE_PAGE_VPN_GET_PRIVATE (self);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.h
index 664a3af..2056673 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-vpn.h
@@ -49,6 +49,7 @@ GType ce_page_vpn_get_type (void);
 
 CEPage *ce_page_vpn_new (NMConnection *connection,
                          GtkWindow *parent,
+                         NMClient *client,
                          NMRemoteSettingsSystem *system_settings,
                          NMAGConfSettings *gconf_settings,
                          const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.c
index ec08755..6182c57 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.c
@@ -102,6 +102,7 @@ finish_setup (CEPageWiredSecurity *self, gpointer unused, GError *error, gpointe
 CEPage *
 ce_page_wired_security_new (NMConnection *connection,
                             GtkWindow *parent_window,
+                            NMClient *client,
                             NMRemoteSettingsSystem *system_settings,
                             NMAGConfSettings *gconf_settings,
                             const char **out_secrets_setting_name,
@@ -114,6 +115,9 @@ ce_page_wired_security_new (NMConnection *connection,
 	self = CE_PAGE_WIRED_SECURITY (g_object_new (CE_TYPE_PAGE_WIRED_SECURITY,
 	                                             CE_PAGE_CONNECTION, connection,
 	                                             CE_PAGE_PARENT_WINDOW, parent_window,
+	                                             CE_PAGE_CLIENT, client,
+	                                             CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                             CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                             NULL));
 	parent = CE_PAGE (self);
 	priv = CE_PAGE_WIRED_SECURITY_GET_PRIVATE (self);
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.h
index 0bc0ec4..ceb074d 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired-security.h
@@ -51,6 +51,7 @@ GType ce_page_wired_security_get_type (void);
 
 CEPage *ce_page_wired_security_new (NMConnection *connection,
                                     GtkWindow *parent,
+                                    NMClient *client,
                                     NMRemoteSettingsSystem *system_settings,
                                     NMAGConfSettings *gconf_settings,
                                     const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.c
index 52107f1..b63dca5 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.c
@@ -197,6 +197,7 @@ finish_setup (CEPageWired *self, gpointer unused, GError *error, gpointer user_d
 CEPage *
 ce_page_wired_new (NMConnection *connection,
                    GtkWindow *parent_window,
+                   NMClient *client,
                    NMRemoteSettingsSystem *system_settings,
                    NMAGConfSettings *gconf_settings,
                    const char **out_secrets_setting_name,
@@ -209,6 +210,9 @@ ce_page_wired_new (NMConnection *connection,
 	self = CE_PAGE_WIRED (g_object_new (CE_TYPE_PAGE_WIRED,
 	                                    CE_PAGE_CONNECTION, connection,
 	                                    CE_PAGE_PARENT_WINDOW, parent_window,
+	                                    CE_PAGE_CLIENT, client,
+	                                    CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                    CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                    NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.h
index d379a2e..33f91a3 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wired.h
@@ -49,6 +49,7 @@ GType ce_page_wired_get_type (void);
 
 CEPage *ce_page_wired_new (NMConnection *connection,
                            GtkWindow *parent,
+                           NMClient *client,
                            NMRemoteSettingsSystem *system_settings,
                            NMAGConfSettings *gconf_settings,
                            const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.c
index f05bfe9..8950c24 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.c
@@ -347,6 +347,7 @@ finish_setup (CEPageWirelessSecurity *self, gpointer unused, GError *error, gpoi
 CEPage *
 ce_page_wireless_security_new (NMConnection *connection,
                                GtkWindow *parent_window,
+                               NMClient *client,
                                NMRemoteSettingsSystem *system_settings,
                                NMAGConfSettings *gconf_settings,
                                const char **out_secrets_setting_name,
@@ -362,6 +363,9 @@ ce_page_wireless_security_new (NMConnection *connection,
 	self = CE_PAGE_WIRELESS_SECURITY (g_object_new (CE_TYPE_PAGE_WIRELESS_SECURITY,
 	                                                CE_PAGE_CONNECTION, connection,
 	                                                CE_PAGE_PARENT_WINDOW, parent_window,
+	                                                CE_PAGE_CLIENT, client,
+	                                                CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                                CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                                NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.h
index d481584..f96101c 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless-security.h
@@ -56,6 +56,7 @@ GType ce_page_wireless_security_get_type (void);
 
 CEPage *ce_page_wireless_security_new (NMConnection *connection,
                                        GtkWindow *parent,
+                                       NMClient *client,
                                        NMRemoteSettingsSystem *system_settings,
                                        NMAGConfSettings *gconf_settings,
                                        const char **out_secrets_setting_name,
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.c.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.c
index b1935df..1783c24 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.c.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.c
@@ -382,6 +382,7 @@ finish_setup (CEPageWireless *self, gpointer unused, GError *error, gpointer use
 CEPage *
 ce_page_wireless_new (NMConnection *connection,
                       GtkWindow *parent_window,
+                      NMClient *client,
                       NMRemoteSettingsSystem *system_settings,
                       NMAGConfSettings *gconf_settings,
                       const char **out_secrets_setting_name,
@@ -396,6 +397,9 @@ ce_page_wireless_new (NMConnection *connection,
 	self = CE_PAGE_WIRELESS (g_object_new (CE_TYPE_PAGE_WIRELESS,
 	                                       CE_PAGE_CONNECTION, connection,
 	                                       CE_PAGE_PARENT_WINDOW, parent_window,
+	                                       CE_PAGE_CLIENT, client,
+	                                       CE_PAGE_SYSTEM_SETTINGS, system_settings,
+	                                       CE_PAGE_GCONF_SETTINGS, gconf_settings,
 	                                       NULL));
 	parent = CE_PAGE (self);
 
diff --git NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.h.ce-vlan NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.h
index 11dfdc9..1fd2206 100644
--- NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.h.ce-vlan
+++ NetworkManager-0.8.1/network-manager-applet-0.8.1/src/connection-editor/page-wireless.h
@@ -49,6 +49,7 @@ GType ce_page_wireless_get_type (void);
 
 CEPage *ce_page_wireless_new (NMConnection *connection,
                               GtkWindow *parent,
+                              NMClient *client,
                               NMRemoteSettingsSystem *system_settings,
                               NMAGConfSettings *gconf_settings,
                               const char **out_secrets_setting_name,

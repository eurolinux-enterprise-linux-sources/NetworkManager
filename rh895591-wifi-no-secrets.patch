From 9ae8ba4623d69aa8db95e05b2323ab3d7abf445e Mon Sep 17 00:00:00 2001
From: Lubomir Rintel <lkundrak@v3.sk>
Date: Tue, 20 Oct 2015 11:16:15 +0200
Subject: [PATCH] policy: don't retry connection with no secrets after timeout

Equivalent to upstream commit eceb613f, without the preceeding refactor
(828c316 [core: simplify autoconnect retry handling]):

    core: don't retry connection with no secrets after timeout

    NMPolicy was resetting the "don't autoconnect because we don't have
    secrets" state on a connection when the autoconnect-retries timer
    timed out, but this doesn't make sense, since the timeout doesn't
    change the fact that there are no secrets.

    https://bugzilla.gnome.org/show_bug.cgi?id=670631

https://bugzilla.redhat.com/show_bug.cgi?id=895591

Fixes: 5fd3163a46edbccc85de8f9e624a998aac729dba
---
 src/nm-policy.c |   25 +++++++++++++++----------
 1 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/src/nm-policy.c b/src/nm-policy.c
index 45873d6..4676377 100644
--- a/src/nm-policy.c
+++ b/src/nm-policy.c
@@ -997,20 +997,25 @@ device_state_changed (NMDevice *device,
 				 * automatically retrying because it's just going to fail anyway.
 				 */
 				set_connection_auto_retries (connection, 0);
-			} else if (tries > 0) {
+
+				/* Don't reset the counter for this connection. */
+				g_object_set_data (G_OBJECT (connection), RESET_RETRIES_TIMESTAMP_TAG, GSIZE_TO_POINTER ((gsize) 0));
+			} else {
 				/* Otherwise if it's a random failure, just decrease the number
 				 * of automatic retries so that the connection gets tried again
 				 * if it still has a retry count.
 				 */
-				set_connection_auto_retries (connection, tries - 1);
-			}
-
-			if (get_connection_auto_retries (connection) == 0) {
-				nm_log_info (LOGD_DEVICE, "Marking connection '%s' invalid.", get_connection_id (connection));
-				/* Schedule a handler to reset retries count */
-				g_object_set_data (G_OBJECT (connection), RESET_RETRIES_TIMESTAMP_TAG, GSIZE_TO_POINTER ((gsize) time (NULL)));
-				if (!policy->reset_retries_id)
-					policy->reset_retries_id = g_timeout_add_seconds (RESET_RETRIES_TIMER, reset_connections_retries, policy);
+				if (tries > 0)
+					tries--;
+				set_connection_auto_retries (connection, tries);
+
+				if (tries == 0) {
+					nm_log_info (LOGD_DEVICE, "Marking connection '%s' invalid.", get_connection_id (connection));
+					/* Schedule a handler to reset retries count */
+					g_object_set_data (G_OBJECT (connection), RESET_RETRIES_TIMESTAMP_TAG, GSIZE_TO_POINTER ((gsize) time (NULL)));
+					if (!policy->reset_retries_id)
+						policy->reset_retries_id = g_timeout_add_seconds (RESET_RETRIES_TIMER, reset_connections_retries, policy);
+				}
 			}
 
 			nm_connection_clear_secrets (connection);
-- 
1.7.1

